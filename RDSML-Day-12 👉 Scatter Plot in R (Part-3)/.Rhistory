names(my_list) = list(pieces = a, names = b, text =c)
my_list
a = c(1, 2, 3)
b = c("Abid", "Juthi", "Rahim")
c = "Welcome"
my_list = list(a, b, c)
names(my_list) = list(pieces = a, names = b, text =c)
my_list
a = c(2, 4, 7)
b = c("Red", "Green", "Blue")
c = "welcome!"
my_list = list(a, b, c)
my_list
a = c(1, 2, 3)
b = c("Abid", "Juthi", "Rahim")
c = "Welcome"
my_list = list(a, b, c)
names(my_list) = list(pieces = a, names = b, text =c)
my_list
my_list = list(pieces = a, names = b, text =c)
my_list
names(my_list) = list(pieces = a, names = b, text =c)
my_list
my_list = list(pieces = a, names = b, text =c)
my_list
my_list[a]
my_list[a]
my_list$pieces
my_list$names[2]
a
b
c
hist(a)
library(nycflights13)
remove.packages("nycflights13")
install.packages("nycflights13")
attach(nycflights13::flights)
library(nycflights13)
attach(nycflights13::flights)
library(nnet)
library(nnet)
data
data
attach(nycflights13::flights)
attach(nycflights13 :: flights)
install.packages("nycflights13")
library(nycflights13)
remove.packages("nycflights13")
install.packages("nycflights13")
nycflights13
library(nycflights13)
library(mnormt)
detach("package:nycflights13", unload = TRUE)
library(nycflights13)
detach("package:nycflights13", unload = TRUE)
remove.packages("nycflights13")
install.packages("nycflights13")
library(nycflights13)
attach(nycflights13::flights)
library(nycflights13)
View(flights)
detach("package:nycflights13", unload = TRUE)
remove.packages("nycflights13")
install.packages("nycflights23")
library(nycflights23)
attach(nycflights23::flights)
install.packages("nycflights13")
library(nycflights13)
head(nycflights23::flights)
summary(distance)
describe(distance)
describe(distance)
summary(distance)
library(nycflights13)
View(flights)
head(nycflights23:flights)
summary(distance)
head(nycflights13:flights)
summary(distance)
library(nycflights13)
View(flights)
attach(nycflights13::flights)
head(nycflights13::flights)
View(flights)
summary(distance)
head(nycflights13::flights)
summary(distanc)
summary(distance)
summary(distanc)
summary(distance)
library(nycflights13)
View(flights)
library(tools)
library(rlang)
install.packages(rlang)
install.packages(rlang)
library(nycflights13)
install.packages(rlang)
exists("describe", mode = "function")
library(psych)
exists("describe", mode = "function")
describe(flights)
library(rlang)
install.packages("rlang")
library(rlang)
summary(nycflights23::flights)
distance(flights)
describe(flights)
library(nycflights23)
attach(nycflights23::flights)
summary(nycflights23)
library(nycflights13)
xcode-select --install
describe(flights)
library(R6)
install.packages(rlang)
install.packages(rlang)
install.packages("rlang")
remove.packages("nycflights13")
install.packages("nycflights13")
library(nycflights13::flights)
attach(nycflights13::flights)
install.packages("pillar")
library(rlang)
library(pillar)
library(nycflights13)
head(nycflights13:flights)
attach(nycflights13::flights)
head(nycflights13::flights)
summary(distanc)
head(nycflights13::flights)
summary(distance)
describe(distance)
demo = cbind(arr_delay, dep_delay, distance)
describe(demo)
install.packages("stringi")
install.packages("xml2")
library(xml2)
summary(flights)
describe(distance)
describe(flights)
describe(distance)
View(demo)
install.packages("skimr")
library(skimr)
skim(your_data)
skim(iris)
library(psych) # it will give functionality of descriptive statistics, not any datasets
data()
attach(nycflights13::flights) # it gives datasets, needs to give attach
describe(distance) # describe function will not give details, function of psych package.
demo = cbind(arr_delay, dep_delay, distance) # if I want to bind column, needs to use cbind function
describe(demo)
frequency(distance)
frequency(demo)
dim(data)
dim(distance)
str(data)
str(distance)
# Introducing the colnames() function
colnames(demo) = c('Arrival delay', 'Departure delay', 'Distance travelled')
describe(demo)
# install.packages("psych")
library(psych)
describe(demo)
# Using the New York airport flight data
# install.packages("nycflights13")
attach(nycflights13::flights)
describe(demo)
library(nycflights13)
describe(demo)
distance
summary(distance)
describe(distance)
describe(demo)
demo = cbind(arr_delay, dep_delay, distance)
describe(demo)
# Introducing the colnames() function
colnames(demo) = c('Arrival delay', 'Departure delay', 'Distance travelled')
describe(demo)
hist(distance)
summary(carrier)
carrier_factor = as.factor(carrier)
summary(carrier_factor)
describeBy(distance, group = carrier)
install.packages("ggplot2")
describeBy(distance, group = carrier)
aggregate(distance, by = list(carrier, month), FUN = mean, na.rm = TRUE) # remove of missing data to get accurate mean
aggregate(distance, by = list(carrier, month), FUN = sd, na.rm = FALSE)
library(ggplot2)
aggregate(distance, by = list(carrier, month), FUN = mean, na.rm = TRUE)
aggregate(arr_delay, by = list(carrier, month), FUN = mean, na.rm = TRUE)
aggregate(arr_delay, by = list(carrier, month), FUN = sd, na.rm = TRUE)
aggregate(arr_time, by = list(carrier), FUN = mean, na.rm = TRUE)
demo
colnames()
colnames(demo)
colnames(demo) = c("Arrival delay", "Depart delay", "Dist travel")
summary(demo)
describeBy(flights, group = month)
describeBy(distance, group = carrier)
describeBy(arr_delay, group = carrier)
describeBy(arr_delay, group = carrier_factor)
describe(carrier)
summary(carrier)
carrier_factor = factor(carrier)
summary(carrier_factor)
describe(carrier)
describe(arr_delay)
describeBy(arr_time, group = carrier)
hist(carrier)
hist(month)
hist(arr_time)
demo = cbind(arr_delay, dep_delay)
summary(demo)# Introducing the colnames() function
colnames(demo) = c("arrival", "departure")
describe(demo)# Introducing the hist() function
describeBy(distance, by = carrier)
describeBy(distance, group = carrier)
aggregate(distance, by = list(carrier), FUN = mean, na.rm = TRUE)
describeBy(distance, group = carrier)
aggregate(distance, by = list(month), FUN = mean, na.rm = TRUE)
library(ggplot2)
dataset = mtcars
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=4, shape = 7)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape = 4) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
ggplot(dataset,L aes(x = wt, y = mpg)) +
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape = 18) +
geom_smooth(method = lm, linetype = "dotted",
color = "darkgreen")
# Converting the cyl column  from a numeric to factor variable
dataset$cyl = as.factor(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
library(ggplot2)
dataset = mtcars
ggplot(dataset, aes(x = wt, y = mpg), geom_point(), geom_smooth())
ggplot(dataset, aes(x = wt, y = mpg)), geom_point(), geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg), geom_point(), geom_smooth())
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg))
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 9) + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 9, color = "blue") +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 2, color = "blue") +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 2, color = "blue") +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 2, color = "blue") +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 2, color = "blue") +
geom_smooth(method = lm, color = "red")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 2, color = "blue") +
geom_smooth(method = lm, line = dashed, color = "red")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=4, shape = 7)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape = 4) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape = 4) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=2, shape = 4) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape = 18) +
geom_smooth(method = lm, linetype = "dotted",
color = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape = 18) +
geom_smooth(method = lm, se = FALSE, linetype = "dotted",
color = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=3, shape = 18) +
geom_smooth(method = lm, linetype = "dotted",
color = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "darkred") + geom_smooth(method = lm, linetype = "dotted", fill = "darkgreen" color = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2) + geom_smooth(method = lm, linetype = "dotted", fill = "darkgreen" color = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2) + geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, se = FALSE, linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, se = FALSE, linetype = "dotted", color = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, linetype = "dotted", color = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 1, shape = 2, color = "blue") + geom_smooth(method = lm, se = FALSE, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, se = FALSE, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, size = 2, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, size = 3, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, shape = 3, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, shape = 4, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, shape = 8, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, shape = 10, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, shape = 20, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, size = 3, linetype = "dotted", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, size = 3, linetype = "dashed
", color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, size = 3, linetype = "dashed",
color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm, linetype = "dashed",
color = "blue", fill = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
dataset$cyl
class(dataset$cyl)
dataset$cyl = factor(dataset$cyl)
class(dataset$cyl)
ggplot(dataset, aes(x = wt, y = mpg, group = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, group = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, group = cyl))
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, size = cyl, shape = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point() +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point() +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, color = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point() + geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point() + geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point(size = 1)
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point(size = 2)
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) + geom_point(size = 2, shape = 3)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, se = FALSE
)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, linetype = "dotted"
)
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm,
color = "blue", linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm,
color = "blue", fill = "blue" linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm,
color = "blue", fill = "blue" linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm,
color = "blue", fill = "red" linetype = "dotted")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm,
color = "blue", linetype = "dotted", fill = "green")
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, fill = "green",
color = "blue", linetype = "dotted", )
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, fill = "yellow",
color = "blue", linetype = "dotted", )
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point(size = 2, shape = 4, shape = cyl) + geom_smooth(method = lm, fill = "yellow",
color = "blue", linetype = "dotted", )
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) + geom_point(size = 2, shape = 4) + geom_smooth(method = lm, fill = "yellow",
color = "blue", linetype = "dotted", )
setwd("/Users/farjanaislam/Documents/SUST/R-for-DAta-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-12 👉 Scatter Plot in R (Part-3)")
library(ggplot2)
dataset = mtcars
View(dataset)
dataset$cyl
dataset$cyl = factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point()
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point()
+ geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl, shape = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, shape = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg,  shape = cyl)) + geom_point() + geom_smooth(method = lm)
# Adding regression lines based on multiple groups
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) + geom_point() + geom_smooth(method = lm)
+ geom_point() + geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, fullrange = TRUE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, fullrange = TRUE, fill = "yellow")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, aes(fill = cyl), fullrange = TRUE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, aes(fill = cyl))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE)
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(16, 3, 17))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(4, 3, 17))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(8, 3, 20))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(8, 3, 15))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE, fill = "red") +
scale_shape_manual(values = c(3, 16, 17))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
theme(legend.position = "bottom")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
theme(legend.position = "leftsided")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) + scale_size_manual(values = c(3, 4, 5))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) + scale_size_manual(values = c(10, 4, 5))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) + scale_color_manual(values = c(10, 4, 5))
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon according to the weight") +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon \n according to the weight") +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon \naccording to the weight") +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon \naccording to the weight",
x = "Weight", y = "mpg") +
theme(legend.position = "top")
ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon \naccording to the weight",
x = "Weight", y = "milles/gallon") +
theme(legend.position = "top")
plot = ggplot(dataset, aes(x = wt, y = mpg,  color = cyl, shape = cyl)) +
geom_point() + geom_smooth(method = lm, se = FALSE, fullrange = TRUE) +
scale_shape_manual(values = c(3, 16, 17)) +
scale_color_manual(values = c("yellow", "red", "blue")) +
labs(title = "Miles per gallon \naccording to the weight",
x = "Weight", y = "milles/gallon") +
theme(legend.position = "top")
plot
plot + theme_classic()
plot + theme_minimal()
plot + theme_dark()
plot + theme_linedraw()
